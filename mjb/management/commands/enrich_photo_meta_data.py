# Generated by Django 3.1.5 on 2021-02-13 17:52
import unittest
import requests

from django.core.management.base import BaseCommand, CommandError
from django.db.models import Q

import django.test

from SiteMJB import settings
from mjb.models import Photographie

EXEMPLE_PETIT = "83A-musique-Contrebasse_1-8_MG-vignette.jpg"
EXEMPLE = "83A-musique-Contrebasse_1_8_MG.jpg"

def get_meta_data(nom_fichier):
    url = settings.RACINE_IMAGES + nom_fichier
    req = requests.get(url)
    if req.status_code != 200:
        return False, False

    url = settings.RACINE_IMAGES + Photographie.fichier_vignette(nom_fichier)
    req = requests.get(url)
    if req.status_code != 200:
        return True, False

    return True, True


def import_meta_data(photo):
    image_ok, vignette_ok = get_meta_data(photo.nom_fichier)
    Photographie.objects.filter(id=photo.id).update(image_ok=image_ok, vignette_ok=vignette_ok)
    return image_ok, vignette_ok


class Command(BaseCommand):

    def handle(self, *args, **options):
        i = 0
        for photo in Photographie.objects.filter(Q(image_ok=None) | Q(vignette_ok=None)):
            if i % 50 == 0:
                self.stdout.write(self.style.SUCCESS('%d ' % i), ending='')
            image_ok, vignette_ok = import_meta_data(photo)
            self.stdout.write(self.style.SUCCESS('x' if not image_ok else '-' if not vignette_ok else '.'), ending='')
            i = i+1
        self.stdout.write(self.style.SUCCESS("%d photos vérifées" % i))



class MappingsTestCaseWithDB(django.test.TestCase):

    def setUp(self):
        self.photo = Photographie.objects.create(nom_fichier=EXEMPLE_PETIT)

    def test_import_meta_data(self):
        import_meta_data(self.photo)
        self.photo.refresh_from_db()
        self.assertTrue(self.photo.image_ok)
        self.assertFalse(self.photo.vignette_ok)


class UtilsTestCase(unittest.TestCase):
    def test_get_meta_data_404(self):
        self.assertEqual((False, False), get_meta_data("unknown"))

    def test_get_meta_data_existant(self):
        self.assertEqual((True, True), get_meta_data(EXEMPLE))

    def test_get_meta_data_existant_petit(self):
        self.assertEqual((True, False), get_meta_data(EXEMPLE_PETIT))