# Generated by Django 3.1.5 on 2021-02-02 19:03

from django.db import migrations


def reformater_num_mgg(num_MGG):
    if num_MGG is None or num_MGG == "":
        return num_MGG
    num_splitte = num_MGG.split('_')
    a_completer = num_MGG
    if len(num_splitte) > 1:
        a_completer = "_".join(num_splitte[1::])
    return "MGG_" + ("0"*max([0, 4 - len(a_completer)])) + a_completer


class Migration(migrations.Migration):

    def maj_num_MGG(apps, schema_editor):
        inventaires = apps.get_model('mjb', 'Inventaire')
        for inv in inventaires.objects.all():
            nouveau_num = reformater_num_mgg(inv.num_mgg)
            inventaires.objects.filter(id=inv.id).update(num_mgg=nouveau_num)

    dependencies = [
        ('mjb', '0011_auto_20210202_1951'),
    ]

    operations = [
        migrations.RunPython(maj_num_MGG),
    ]

def test_format_1():
    assert reformater_num_mgg("MGG_1") == "MGG_0001"


def test_format_11():
    assert reformater_num_mgg("MGG_11") == "MGG_0011"


def test_format_111():
    assert reformater_num_mgg("MGG_111") == "MGG_0111"


def test_format_1111():
    assert reformater_num_mgg("MGG_1111") == "MGG_1111"


def test_format_11111():
    assert reformater_num_mgg("MGG_11111") == "MGG_11111"


def test_format_0011():
    assert reformater_num_mgg("MGG_0011") == "MGG_0011"


def test_format_NoMGG11():
    assert reformater_num_mgg("11") == "MGG_0011"


def test_format_multiple_underscore():
    assert reformater_num_mgg("1_2_3") == "MGG_02_3"


def test_format_Empty():
    assert reformater_num_mgg("") == ""


def test_format_None():
    assert reformater_num_mgg(None) == None

